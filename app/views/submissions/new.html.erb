<h3 class="title title-page">Submit a new paper</h3>

<%= simple_form_for(@submission,
             html: { class: 'submissionUpload',
                     data: { 'form-data' => (@s3_direct_post.fields),
                    'url' => @s3_direct_post.url,
                    'host' => URI.parse(@s3_direct_post.url).host } },
             ) do |f| %>

  <%= f.error_notification %>

  <%= f.input :title, label: 'Title',
                      wrapper_html: { class: 'field-wrap' },
                      input_html: { class: 'field field-text' } %>

  <%= f.input :journal, label: 'Journal (optional)',
                        wrapper_html: { class: 'field-wrap' },
                        input_html: { class: 'field field-text' } %>

  <%= f.input :doi, label: 'DOI (optional)',
                    wrapper_html: { class: 'field-wrap' },
                    input_html: { class: 'field field-text' } %>

  <%= f.input :pub_date, label: 'Publication Date', as: :date,
                         start_year: Date.today.year - 10,
                         end_year: Date.today.year + 2, discard_day: true,
                         order: [:month, :year],
                         include_blank: true,
                         hint: 'If not yet published, please enter an estimated Publication Date.',
                         wrapper_html: { class: 'field-wrap' },
                         input_html: { class: 'field field-select' } %>

  <%= f.input :funders, label: 'Funders', as: :check_boxes,
                        collection: @submission.valid_funders.compact, include_hidden: false,
                        wrapper_html: { class: 'field-wrap list-checkboxes' },
                        input_html: { class: 'input-checkbox' } %>

  <%= f.input :documents, as: :file, multiple: true,
                               hint: 'Drag and Drop files or click "Choose Files"',
                               wrapper_html: { class: 'field-wrap' },
                               input_html: { class: 'field field-upload',
                                             multiple: true } %>

  <div class="field-group">
    <div class="col-sm-10 col-sm-offset-2">
      <!-- The global progress bar -->
      <div id="progress" class="progress" style="display: none;">
        <div class="progress-bar progress-bar-success"></div>
      </div>

      <!-- The container for the uploaded files -->
      <div id="files" class="files">
        Already Uploaded Documents for this Submission:
        <ul id="file_list">
          <% if @submission.documents? %>
            <% @submission.documents.each do |doc| %>
              <li><%= doc.split('/').last %></li>
              <%= f.hidden_field :documents, value: doc, name: 'submission[documents][]', class: 'hidden_docs' %>
            <% end %>
          <% end %>
        </ul>
      </div>

      <div id="resetUploads" style="display: none;">
        <button type="button" id="uploadReset" class="btn button-secondary button-warn">Remove Uploads</button>
      </div>
    </div>
  </div>

  <div class="field-wrap">
    <%= submit_tag "Create Submission", class: 'btn button-primary' %>
  </div>

<% end %>

<script>
$(function () {
    'use strict';
    var form = $('#submission_documents').parents('form:first');
    var url = form.data('url');

    <% if @submission.documents? %>
      $('#resetUploads').show();
    <% else %>
      $('#files').hide();
    <% end %>

    $("#uploadReset").click(function() {
      $("#file_list").text('');
      $("#files").hide();
      $(".hidden_docs").remove();
      $("#progress").hide();
      $("#resetUploads").hide();
    });

    $('#submission_documents').fileupload({
        url: url,
        type: 'POST',
        dataType: 'XML',
        autoUpload: true,
        formData: form.data('form-data'),
        // acceptFileTypes: /(\.|\/)(gif|jpe?g|png)$/i,
        paramName: 'file' // S3 does not like nested name fields i.e. name="user[avatar_url]",

    }).on('fileuploadadd', function (e, data) {
        // console.log("add");

    }).on('fileuploadprocessalways', function (e, data) {
        // console.log("always");

    }).on('fileuploadprogressall', function (e, data) {
        // console.log("progress all");

    }).on('fileuploaddone', function (e, data) {
        // console.log("upload done");
        data.context = $('#file_list');
        $.each(data.files, function (index, file) {
            var node = $('<li/>').text(file.name + ' uploaded');
            if (!index) {
                node.append('<br>');
                // console.log(file);
            }
            node.appendTo(data.context);
        });

        // extract key and generate URL from response
        var key   = $(data.jqXHR.responseXML).find("Key").text();
        var url   = '//' + form.data('host') + '/' + key;

        // create hidden field
        var input = $("<input />", { type:'hidden', class: 'hidden_docs', name: $('#submission_documents').attr('name'), value: url })
        form.append(input);
        $("#files").show();
        $("#resetUploads").show();

    }).on('fileuploadfail', function (e, data) {
        // console.log("upload fail");
        $.each(data.files, function (index) {
            var error = $('<span class="text-danger"/>').text('File upload failed.');
            $(data.context.children()[index])
                .append('<br>')
                .append(error);
        });
    }).prop('disabled', !$.support.fileInput)
        .parent().addClass($.support.fileInput ? undefined : 'disabled');
});
</script>
